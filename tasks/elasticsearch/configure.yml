---

- name: "Apply s3 backup lifecycle policy on the s3 bucket {{ backup_es_bucket_name }}"
  s3_lifecycle:
    name: "{{ backup_es_bucket_name }}"
    rule_id: "{{ backup_s3_expire_policy.name|default(default_backup_s3_expire_policy.name) }}"
    transition_days: "{ backup_s3_expire_policy.glacier_transition|default(default_backup_s3_expire_policy.glacier_transition) }}"
    expiration_days: "{{ backup_s3_expire_policy.permanently_delete|default(default_backup_s3_expire_policy.permanently_delete) }}"
    prefix: "{{ backup_s3_expire_policy.prefix|default(default_backup_s3_expire_policy.prefix) }}"
    status: enabled
    state: present
  run_once: true
  delegate_to: 127.0.0.1
  when: backup_s3_expire_policy.glacier_transition is defined and backup_s3_expire_policy.glacier_transition > 0

- name: "Apply s3 backup lifecycle policy on the s3 bucket {{ backup_es_bucket_name }}"
  s3_lifecycle:
    name: "{{ backup_es_bucket_name }}"
    rule_id: "{{ backup_s3_expire_policy.name|default(default_backup_s3_expire_policy.name) }}"
    expiration_days: "{{ backup_s3_expire_policy.permanently_delete|default(default_backup_s3_expire_policy.permanently_delete) }}"
    prefix: "{{ backup_s3_expire_policy.prefix|default(default_backup_s3_expire_policy.prefix) }}"
    status: enabled
    state: present
  run_once: true
  delegate_to: 127.0.0.1
  when: backup_s3_expire_policy.glacier_transition is not defined or backup_s3_expire_policy.glacier_transition == 0


- name: "Add elasticsearch backup script /usr/bin/elasticsearch-backup.sh"
  template: src=elasticsearch/elasticsearch-backup.sh.j2 dest=/usr/bin/elasticsearch-backup.sh owner=root group=root mode=0755

- name: "Add elasticsearch repository creation script /usr/bin/elasticsearch-create-backup-repository.sh"
  template: src=elasticsearch/elasticsearch-create-backup-repository.sh.j2 dest=/usr/bin/elasticsearch-create-backup-repository.sh owner=root group=root mode=0755

# Configure backups
- name: "ES repository {{ backup_es_repository_name }} exist ?"
  uri: >
    url="http://{{ backup_es_host }}:{{ backup_es_port }}/_snapshot/{{ backup_es_repository_name }}"
    method=GET
    status_code=200
  ignore_errors: True
  register: backup_es_repository_status

- name: "Create ES repository {{ backup_es_repository_name }}"
  command: /usr/bin/elasticsearch-create-backup-repository.sh
  when: backup_es_repository_status|failed

# Add cron comands
- name: "cron add snapshot and retention commands"
  cron: >
    name="{{ item.name | default(default_backup_es_cron.name) }}"
    job="{{ item.job | default(default_backup_es_cron.job) }}"
    minute="{{ item.minute | default(default_backup_es_cron.minute) }}"
    hour="{{ item.hour | default(default_backup_es_cron.hour) }}"
    day="{{ item.day | default(default_backup_es_cron.day) }}"
    month="{{ item.month | default(default_backup_es_cron.month) }}"
    weekday="{{ item.weekday | default(default_backup_es_cron.weekday) }}"
    cron_file="{{ item.file | default(default_backup_es_cron.cron_file) }}"
    user="{{ item.user | default(default_backup_es_cron.user) }}"
    state="{{ item.state | default(default_backup_es_cron.state) }}"
  with_items:
    - "{{ backup_es_cron }}"
  sudo: yes 

