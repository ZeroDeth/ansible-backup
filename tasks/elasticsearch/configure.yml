---

- name: "Apply s3 backup lifecycle policy on the s3 bucket {{ backup_es_bucket_name }}"
  s3_lifecycle:
    rule_id: "{{ _backup_s3_expire_policy.name }}"
    name: "{{ backup_es_bucket_name }}"
    transition_days: "{ _backup_s3_expire_policy.glacier_transition }}"
    expiration_days: "{{ _backup_s3_expire_policy.permanently_delete }}"
    prefix: "{{ _backup_s3_expire_policy.prefix }}"
    status: enabled
    state: present
  run_once: true
  delegate_to: 127.0.0.1
  when: _backup_s3_expire_policy.glacier_transition > 0

- name: "Apply s3 backup lifecycle policy on the s3 bucket {{ backup_es_bucket_name }}"
  s3_lifecycle:
    rule_id: "{{ _backup_s3_expire_policy.name }}"
    name: "{{ backup_es_bucket_name }}"
    expiration_days: "{{ _backup_s3_expire_policy.permanently_delete }}"
    prefix: "{{ _backup_s3_expire_policy.prefix }}"
    status: enabled
    state: present
  run_once: true
  delegate_to: 127.0.0.1
  when: _backup_s3_expire_policy.glacier_transition == 0


- name: "Add elasticsearch backup script /usr/bin/elasticsearch-backup.sh"
  template: src=elasticsearch/elasticsearch-backup.sh.j2 dest=/usr/bin/elasticsearch-backup.sh owner=root group=root mode=0755

- name: "Add elasticsearch repository creation script /usr/bin/elasticsearch-create-backup-repository.sh"
  template: src=elasticsearch/elasticsearch-create-backup-repository.sh.j2 dest=/usr/bin/elasticsearch-create-backup-repository.sh owner=root group=root mode=0755

# Configure backups
- name: "ES repository {{ backup_es_repository_name }} exist ?"
  uri: >
    url="http://{{ backup_es_host }}:{{ backup_es_port }}/_snapshot/{{ backup_es_repository_name }}"
    method=GET
    status_code=200
  ignore_errors: True
  register: backup_es_repository_status

- name: "Create ES repository {{ backup_es_repository_name }}"
  command: /usr/bin/elasticsearch-create-backup-repository.sh
  when: backup_es_repository_status|failed

# Add cron comands
- name: "cron add snapshot and retention commands"
  cron: >
    name="{{ item.name }}"
    job="{{ item.job }}"
    minute={{ item.minute|default('*') }}
    hour={{ item.hour|default('*') }}
    day={{ item.day|default('*') }}
    month={{ item.month|default('*') }}
    weekday={{ item.weekday|default('*') }}
    cron_file={{ item.file|default("es_backup") }}
    user={{ item.user|default('root') }}
    state={{ item.state|default('present') }}
  with_items:
    - "{{ _backup_es_cron }}"
  sudo: yes 

